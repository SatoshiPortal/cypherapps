version: "3"

# <%= APP_UPSTREAM_HOST %>: Hostname for the upstream into cyphernodes reverse proxy to expose the app to the world
# <%= APP_ID %> use this to avoid conflicts in hostname in case you have multiple services in your app
# if you need those values inside your app, you can pass them in the environment
# container names will be ignored
# Prefix all container names you use with the <%= APP_ID %> to prevent unwanted namespace collision
# between apps. It's very likely if you use a database like redis or mongo that you will name this
# container 'mongo' or 'redis' like every other app developer, so there will be container name
# collisions. Consider using '<%= APP_ID %>_redis' or '<%= APP_ID %>_mongo' instead.
# container names will be checked and if they don't contain the unique part, the app won't be
# able to be installed

services:
  # This is the container which will be used as the reverse proxy upstream
  <%= APP_UPSTREAM_HOST %>:
    environment:
      - "CYPHERNODE_URL=$GATEKEEPER_URL"
      - "CYPHERNODE_CERT=/certs/cert.pem"
      - "APP_DESCRIPTION_FILE=/data/app.json"
      - "CONFIG_FILE=/data/config.toml"
      - "APP_UPSTREAM_HOST=<%= APP_UPSTREAM_HOST %>"
      - "APP_ID=<%= APP_ID %>"
    image: cyphernode/app_welcome:v0.2.2
    volumes:
      - "$GATEKEEPER_CERTS_PATH:/certs"
      - "$APP_DATA:/data"
    networks:
      - cyphernodeappsnet
    restart: always
    labels:
      - "traefik.docker.network=cyphernodeappsnet"
      - "traefik.frontend.rule=PathPrefixStrip:/welcome"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.frontend.auth.basic.usersFile=/htpasswd/htpasswd"
networks:
  cyphernodeappsnet:
    external: true
